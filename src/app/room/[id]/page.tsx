import { ref, get } from "firebase/database";
import { database } from "../../../lib/firebase/config";
import { Metadata, ResolvingMetadata } from "next";
import RoomClient from "./RoomClient";

type Props = {
  params: { id: string }
  searchParams: { [key: string]: string | string[] | undefined }
}

export async function generateMetadata({ params }: Props, parent: ResolvingMetadata): Promise<Metadata> {
  const id = params.id;
  const roomRef = ref(database, `rooms/${id}`);
  const snapshot = await get(roomRef);

  if (!snapshot.exists()) {
    return {
      title: 'Board Games',
      description: "Generated by Board Games",
    };
  }

  const room = snapshot.val();
  return {
    title: room.name,
    description: room.name,
    openGraph: {
      images: ['/some-specific-page-image.jpg'],
    },
  };
}

export default function RoomPage({ params }: Props) {
  return <RoomClient params={params} />;
}
